const mongoose = require('mongoose');
const treatmentPlanSchema = new mongoose.Schema({
        residentName: String,
        date: Date,
        dob: Date,
        admitDate: Date,
        care: {
                physicalServices: { type: Boolean, default: false },
                behavioralServices: { type: Boolean, default: false },
                medicationServices: {
                        administration: { type: Boolean, default: false },
                        selfAdministration: { type: Boolean, default: false },
                },
        },
        presentingProblems: [String],
        diagnoses: String,
        mentalStatus: {
                oriented: { type: Boolean, default: false },
                disoriented: { type: Boolean, default: false },
                unstable: { type: Boolean, default: false },
                other: String,
        },
        moodLevel: String,
        adls: {
                independent: { type: Boolean, default: false },
                personalCareLevel: String,
        },
        behavioralHealthServices: {
                receivesServices: { type: Boolean, default: false },
                prescribedMedication: { type: Boolean, default: false },
                followsHouseRules: { type: Boolean, default: false },
        },
        primaryCareProvider: String,
        psychiatricProvider: String,
        residentGoals: String,
        allergies: String,
        triggers: String,
        strengths: [String],
        limitations: String, // Consider removing this section
        barriers: [String],
        riskAssessment: {
                behavioralSymptoms: [String],
                physicalSymptoms: [String],
                cognitiveSymptoms: [String],
                psychosocialSymptoms: [String],
        },
        interventions: [String],
        counselingFrequency: {
                group: String,
                individual: String,
                individualTherapy: Boolean,
                residentDeclinesIndividualTherapy: Boolean,
                familyCounseling: Boolean,
                aa: Boolean,
                na: Boolean,
                artMeetingStaffing: String,
        },
        goalsForChanges: String,
        treatmentGoals: [{
                name: String,
                admissionMeasure: String,
                previousMeasure: String,
                currentMeasure: String,
                estimatedDateOfCompletion: Date,
                comments: String,
        }],
        residentParticipation: String,
        residentAttitude: String,
        residentProgress: String,
        supportSystem: [String],
        currentMedications: String,
        religiousPreference: String,
        nutritionAndWellnessPlanning: String,
        recommendationToExtendResidentialTreatment: String,
        dischargePlanning: String,
        recommendationsForFurtherPrograms: [String],
        afterCareAndTransitionPlanning: [String],
        clinicalSummary: String,
        treatmentPlanReviewDate: Date,
        dischargePlanDate: Date,
        individualsParticipatingInServicePlan: {
                resident: String,
                guardian: String,
                staff: String,
                bhp: String,
        },
        residentAgreement: {
                yes: Boolean,
                no: Boolean,
                refusalReason: String,
        },
        signatures: {
                resident: {
                        name: String,
                        credentials: String,
                        signature: String,
                        date: Date,
                },
                facilityRep: {
                        name: String,
                        credentials: String,
                        signature: String,
                        date: Date,
                },
                bhp: {
                        name: String,
                        credentials: String,
                        signature: String,
                        date: Date,
                },
        },
});
const TreatmentPlan = mongoose.model('TreatmentPlan', treatmentPlanSchema);
module.exports = TreatmentPlan
